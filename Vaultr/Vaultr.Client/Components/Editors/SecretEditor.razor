@inherits BasePropertyEditor
@inject SecretClientsProvider SecretClientsProvider

<div class="input-group">

    <input value=@GetValue()
           @oninput=@(args => SetValue(((string?)args.Value) ?? ""))
           disabled=@IsEncrypted
           placeholder=@Placeholder
           class="form-control @(CssHelper.GetValidationClass(State))" />

    <div class="input-group-append">

        @if (IsEncrypted)
        {
            <button class="btn btn-light" @onclick=UnlockAsync>
                <Icon Name="Unlock" />
            </button>
        }
        else if (IsDecrypted && !IsModified)
        {
            <button class="btn btn-light" @onclick=Lock>
                <Icon Name="Lock" />
            </button>
        }
        else
        {
            <button class="btn btn-light" @onclick=SaveAsync>
                <Icon Name="Save" />
            </button>
        }

        @if (SecretClientsProvider.Clients.Count > 1)
        {
            <div class="dropdown">
                <button class="btn btn-light dropdown-toggle" @key=_buttonId id=@_buttonId><Icon Name="Move" /></button>
            </div>
            <div class="dropdown-menu" @key=_menuId id=@_menuId>
                @foreach (var kv in SecretClientsProvider.Clients.Where(x => x.Key != KeyVaultName))
                {
                    <a class="dropdown-item" href="#" @onclick=@((e) => CopyAsync(kv.Key))>Copy to @kv.Key</a>
                }
            </div>
        }

    </div>
</div>
