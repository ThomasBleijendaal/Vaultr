@inherits BasePropertyEditor

<div class="input-group">

    @if (!SecretsProvider.HighKeyvaultCount)
    {
        <div class="input-group-prepend">
            @if (CanDemote == true)
            {
                <button class="btn btn-light" @onclick=DemoteAsync disabled=@(DangerModeProvider.IsEnabled == false)>
                    @if (IsDoing == Action.Demoting)
                    {
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    }
                    else
                    {
                        <Icon Name="DoubleChevronLeft8" />
                    }
                </button>
            }
            else if (CanDemote == false)
            {
                <button class="btn btn-light" disabled>
                    <Icon Name="DoubleChevronLeft8" />
                </button>
            }

            @if (SecretMetric != null)
            {
                if (SecretMetric.Reads > 0)
                {
                    <div class="input-group-text" title="Secret was read @SecretMetric.Reads times recently"><Icon Name="Accept" /></div>
                }
                else
                {
                    <div class="input-group-text" title="Secret was not read recently"><Icon Name="Error" /></div>
                }
            }
        </div>
    }

    <input value=@GetValue()
           @oninput=@(args => SetValue(((string?)args.Value) ?? ""))
           disabled=@IsEncrypted
           placeholder=@Placeholder
           class="form-control @(CssHelper.GetValidationClass(State)) @(_latestEditorIdToCopy == _editorId ? "last-to-copy" : "")" />

    <div class="input-group-append @(SecretsProvider.HighKeyvaultCount ? "wrap" : "")">

        @if (SecretsProvider.HighKeyvaultCount)
        {
            @if (CanDemote == true)
            {
                <button class="btn btn-light" @onclick=DemoteAsync disabled=@(DangerModeProvider.IsEnabled == false)>
                    @if (IsDoing == Action.Demoting)
                    {
                        <div class="spinner-border" role="status">
                            <span class="sr-only">Loading...</span>
                        </div>
                    }
                    else
                    {
                        <Icon Name="DoubleChevronLeft8" />
                    }
                </button>
            }
            else if (CanDemote == false)
            {
                <button class="btn btn-light" disabled>
                    <Icon Name="DoubleChevronLeft8" />
                </button>
            }
        }

        @if (IsEncrypted)
        {
            <button class="btn btn-light" @onclick=UnlockAsync>
                @if (IsDoing == Action.Unlocking)
                {
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
                else
                {
                    <Icon Name="Unlock" />
                }
            </button>
        }
        else if (IsDecrypted && !IsModified)
        {
            <button class="btn btn-light" @onclick=Lock>
                <Icon Name="Lock" />
            </button>
        }
        else
        {
            <button class="btn btn-light" @onclick=SaveAsync>
                @if (IsDoing == Action.Saving)
                {
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
                else
                {
                    <Icon Name="Save" />
                }
            </button>
        }

        <div class="btn-group dropleft">
            <button type="button" class="btn dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" onclick="secretEditor.showDropdown(this)">
                <span class="sr-only">Toggle Dropright</span>
            </button>
            <div class="dropdown-menu">
                <a class="dropdown-item" href="#" @onclick=CopyAsBase64ToClipboardAsync onmouseup="secretEditor.hideDropdown()">Copy as Base64</a>
                <a class="dropdown-item" href="#" @onclick=CopyAsUsernameToClipboardAsync onmouseup="secretEditor.hideDropdown()">Copy as Basic Auth username</a>
                <a class="dropdown-item" href="#" @onclick=CopyAsPasswordToClipboardAsync onmouseup="secretEditor.hideDropdown()">Copy as Basic Auth password</a>
            </div>
            <button class="btn btn-light" @onclick=CopyToClipboardAsync>
                @if (IsDoing == Action.Copying)
                {
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
                else
                {
                    <Icon Name="ClipboardList" />
                }
            </button>
        </div>

        <button class="btn btn-danger" @onclick=DeleteAsync disabled=@(DangerModeProvider.IsEnabled == false)>
            @if (IsDoing == Action.Deleting)
            {
                <div class="spinner-border" role="status">
                    <span class="sr-only">Loading...</span>
                </div>
            }
            else
            {
                <Icon Name="Delete" />
            }
        </button>

        @if (CanPromote == true)
        {
            <button class="btn btn-light" @onclick=PromoteAsync disabled=@(DangerModeProvider.IsEnabled == false)>
                @if (IsDoing == Action.Promoting)
                {
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
                else
                {
                    <Icon Name="DoubleChevronRight8" />
                }
            </button>
        }
        else if (CanPromote == false)
        {
            <button class="btn btn-light" disabled>
                <Icon Name="DoubleChevronRight8" />
            </button>
        }

    </div>
</div>
